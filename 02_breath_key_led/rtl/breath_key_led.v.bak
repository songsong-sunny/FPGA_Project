
module breath_key_led(
    input   sys_clk,              //ÏµÍ³Ê±ÖÓ   50MHz    20ns
    input   sys_rst_l,
//    input   key,
    output reg led
);

parameter CNT_2US_MAX = 7'd100;
parameter CNT_2MS_MAX = 10'd1000;
parameter CNT_2S_MAX = 10'd1000;

reg[6:0] cnt_2us;
reg[9:0] cnt_2ms;
reg[9:0] cnt_2s;

reg inc_dev_flag;                  // 1 £º ÁÁ¶ÈµİÔö  0 £º ÁÁ¶Èµİ¼õ
reg breath_sw_flga;                // 1 £º ºôÎüµÆ¿ªÆô  0 £º ºôÎüµÆ¹Ø±Õ

//assign led = ~key;

always@(posedge sys_clk or negedge sys_rst_l) begin            //  2us
    
    if(!sys_rst_l)
        cnt_2us <= 7'b0;
    else if(cnt_2us == (CNT_2US_MAX - 7'b1))
        cnt_2us <= 7'b0;

    else
        cnt_2us <= cnt_2us + 7'b1;

end

always@(posedge sys_clk or negedge sys_rst_l) begin            //  2ms
    
    if(!sys_rst_l)
        cnt_2ms <= 10'b0;
    else if(cnt_2ms == (CNT_2MS_MAX - 10'b1))
        cnt_2ms <= 10'b0;
    else if(cnt_2us == (CNT_2US_MAX - 7'b1))
        cnt_2ms <= cnt_2ms + 10'b1;
    else
        cnt_2ms <= cnt_2ms;

end

always@(posedge sys_clk or negedge sys_rst_l) begin            //  2s
    
    if(!sys_rst_l)
        cnt_2s <= 10'b0;
    else if(cnt_2s == (CNT_2S_MAX - 10'b1))
        cnt_2s <= 10'b0;
    else if(cnt_2ms == (CNT_2MS_MAX - 10'b1))
        cnt_2s <= cnt_2s + 10'b1;
    else
        cnt_2s <= cnt_2s;

end

always@(posedge sys_clk or negedge sys_rst_l) begin         //  ºôÎüµÆ·½Ïò
    
    if(!sys_rst_l)
        inc_dev_flag <= 1'b0;
    else if(cnt_2s == (CNT_2S_MAX - 10'b1))
        inc_dev_flag <= ~inc_dev_flag;
    else
        inc_dev_flag <= inc_dev_flag;

end

always@(posedge sys_clk or negedge sys_rst_l) begin         //  ºôÎüµÆ
    
    if(!sys_rst_l)
        led <= 1'b0;
    else if((inc_dev_flag == 1'b1 && cnt_2ms <= cnt_2s) && (inc_dev_flag == 1'b0 && cnt_2ms >= cnt_2s))
        led <= 1'b1;
    else
        led <= 1'b0;

end

endmodule